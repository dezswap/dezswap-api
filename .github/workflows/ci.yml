name: CI

on:
  push:
    branches: [ "main" ]
    paths-ignore: [ 'README.md', 'LICENSE', 'config.example.yml', '.gitignore', '.github/CODEOWNERS', '.github/pull_request_template.md' ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      cosmwasm-etl-db:
        image: postgres
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: appPW
          POSTGRES_DB: dezswap_api
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v5

    - name: Setup Golang with cache
      uses: magnetikonline/action-golang-cache@v5
      with:
        go-version-file: go.mod

    - name: Generate bindings
      run: |
        go install github.com/ethereum/go-ethereum/cmd/abigen@v1.14.12
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        make generate

    - name: Run Golang linter
      uses: golangci/golangci-lint-action@v8

    - name: Setup postgres
      run: cd test_supplements && docker compose up -d

    - name: Tests
      shell: bash
      env:
        TEST_CONFIG: ${{ secrets.TEST_CONFIG }}
      run: |
        echo "$TEST_CONFIG" > config.yml
        make test

    - name: Build all
      run: make build-all
