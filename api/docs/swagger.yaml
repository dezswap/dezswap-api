definitions:
  coingecko.PairRes:
    properties:
      base:
        type: string
      pool_id:
        type: string
      target:
        type: string
      ticker_id:
        type: string
    type: object
  coingecko.TickerRes:
    properties:
      base_currency:
        type: string
      base_volume:
        type: string
      last_price:
        type: string
      liquidity_in_usd:
        type: string
      pool_id:
        type: string
      target_currency:
        type: string
      target_volume:
        type: string
      ticker_id:
        type: string
    type: object
  coinmarketcap.TickerRes:
    properties:
      base_id:
        type: string
      base_name:
        type: string
      base_symbol:
        type: string
      base_volume:
        type: string
      last_price:
        type: string
      quote_id:
        type: string
      quote_name:
        type: string
      quote_symbol:
        type: string
      quote_volume:
        type: string
    type: object
  coinmarketcap.TickersRes:
    additionalProperties:
      $ref: '#/definitions/coinmarketcap.TickerRes'
    type: object
  controller.PairRes:
    properties:
      asset_decimals:
        items:
          type: integer
        type: array
      asset_infos:
        items:
          $ref: '#/definitions/dezswap.AssetInfoTokenRes'
        type: array
      contract_addr:
        type: string
      liquidity_token:
        type: string
    type: object
  controller.PairsRes:
    properties:
      pairs:
        items:
          $ref: '#/definitions/controller.PairRes'
        type: array
    type: object
  controller.PoolRes:
    properties:
      address:
        type: string
      assets:
        items:
          $ref: '#/definitions/dezswap.AssetInfoRes'
        type: array
      total_share:
        type: string
    type: object
  controller.StatRes:
    properties:
      apr:
        items:
          $ref: '#/definitions/controller.StatValueRes'
        type: array
      fee:
        items:
          $ref: '#/definitions/controller.StatValueRes'
        type: array
      volume:
        items:
          $ref: '#/definitions/controller.StatValueRes'
        type: array
    type: object
  controller.StatValueRes:
    properties:
      address:
        type: string
      value:
        type: string
    type: object
  controller.StatsRes:
    properties:
      stats_1mon:
        $ref: '#/definitions/controller.StatRes'
      stats_7d:
        $ref: '#/definitions/controller.StatRes'
      stats_24h:
        $ref: '#/definitions/controller.StatRes'
    type: object
  controller.TokenRes:
    properties:
      chainId:
        type: string
      decimals:
        type: integer
      icon:
        type: string
      name:
        type: string
      protocol:
        type: string
      symbol:
        type: string
      token:
        type: string
      total_supply:
        type: string
      verified:
        type: boolean
    type: object
  dashboard.PoolRes:
    properties:
      address:
        type: string
      apr:
        type: string
      fee:
        type: string
      tvl:
        type: string
      volume:
        type: string
    type: object
  dashboard.RecentRes:
    properties:
      fee:
        type: string
      feeChangeRate:
        type: number
      tvl:
        type: string
      tvlChangeRate:
        type: number
      volume:
        type: string
      volumeChangeRate:
        type: number
    type: object
  dashboard.StatisticResItem:
    properties:
      addressCount:
        type: integer
      fee:
        type: string
      timestamp:
        type: string
      txCount:
        type: integer
    type: object
  dashboard.TokenRes:
    properties:
      address:
        type: string
      fee:
        type: string
      price:
        type: string
      price_change:
        type: number
      tvl:
        type: string
      tvl_change:
        type: string
      volume_7d:
        type: string
      volume_7d_change:
        type: string
      volume_24h:
        type: string
      volume_24h_change:
        type: string
    type: object
  dashboard.TvlRes:
    properties:
      timestamp:
        type: string
      tvl:
        type: string
    type: object
  dashboard.TxRes:
    properties:
      account:
        type: string
      action:
        type: string
      address:
        type: string
      asset0:
        type: string
      asset0amount:
        type: string
      asset1:
        type: string
      asset1amount:
        type: string
      hash:
        type: string
      timestamp:
        type: string
      totalValue:
        type: string
    type: object
  dashboard.VolumeRes:
    properties:
      timestamp:
        type: string
      volume:
        type: string
    type: object
  dezswap.AssetInfoRes:
    properties:
      amount:
        type: string
      info:
        $ref: '#/definitions/dezswap.AssetInfoTokenRes'
    type: object
  dezswap.AssetInfoTokenRes:
    properties:
      native_token:
        $ref: '#/definitions/dezswap.NativeTokenAssetInfoRes'
      token:
        $ref: '#/definitions/dezswap.TokenAssetInfoRes'
    type: object
  dezswap.NativeTokenAssetInfoRes:
    properties:
      denom:
        type: string
    type: object
  dezswap.TokenAssetInfoRes:
    properties:
      contract_addr:
        type: string
    type: object
  httputil.BadRequestError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: bad request
        type: string
    type: object
  httputil.InternalServerError:
    properties:
      code:
        example: 500
        type: integer
      message:
        example: internal server error
        type: string
    type: object
  httputil.NotFoundError:
    properties:
      code:
        example: 404
        type: integer
      message:
        example: not found
        type: string
    type: object
info:
  contact: {}
paths:
  /coingecko/pairs:
    get:
      consumes:
      - application/json
      description: get Pairs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/coingecko.PairRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: All Pairs
      tags:
      - coingecko
  /coingecko/pairs/{address}:
    get:
      consumes:
      - application/json
      description: get Pair by Address
      parameters:
      - description: Pair Address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coingecko.PairRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Get a pair
      tags:
      - coingecko
  /coingecko/tickers:
    get:
      consumes:
      - application/json
      description: get Tickers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/coingecko.TickerRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: All Tickers
      tags:
      - coingecko
  /coingecko/tickers/{id}:
    get:
      consumes:
      - application/json
      description: get Ticker by Id
      parameters:
      - description: Ticker ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coingecko.TickerRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Get a ticker
      tags:
      - coingecko
  /coinmarketcap/tickers:
    get:
      consumes:
      - application/json
      description: get Tickers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coinmarketcap.TickersRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: All Tickers
      tags:
      - coinmarketcap
  /coinmarketcap/tickers/{id}:
    get:
      consumes:
      - application/json
      description: get Ticker by Id
      parameters:
      - description: Ticker ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/coinmarketcap.TickerRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Get a ticker
      tags:
      - coinmarketcap
  /dashboard/TVLs:
    get:
      consumes:
      - application/json
      description: get TVLs
      parameters:
      - description: default(empty) value is all
        enum:
        - year
        - quarter
        - month
        in: query
        name: duration
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dashboard.TvlRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: TVLs of dezswap selected duration
      tags:
      - dashboard
  /dashboard/pools:
    get:
      consumes:
      - application/json
      description: get Pools data of dezswap (address, tvl, volume, fee, apr)
      parameters:
      - description: token address
        in: query
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dashboard.PoolRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Dezswap's Pools
      tags:
      - dashboard
  /dashboard/recent:
    get:
      consumes:
      - application/json
      description: get Recent
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dashboard.RecentRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Recent 24H data with it's change rate
      tags:
      - dashboard
  /dashboard/statistics:
    get:
      consumes:
      - application/json
      description: get Statistic data of dezswap (address count, tx count, fee)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dashboard.StatisticResItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Dezswap's statistics
      tags:
      - dashboard
  /dashboard/token/{address}:
    get:
      consumes:
      - application/json
      description: get Token data of dezswap (address, price, price_change, volume_24h,  volume_24h_change,
        volume_7d, volume_7d_change, tvl)
      parameters:
      - description: token address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dashboard.TokenRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Dezswap's Token Stats
      tags:
      - dashboard
  /dashboard/token_chart/{address}:
    get:
      consumes:
      - application/json
      description: get Token' chart data of Dezswap by designated interval
      parameters:
      - description: token address
        in: path
        name: address
        required: true
        type: string
      - description: chart data type
        enum:
        - volume
        - tvl
        - price
        in: query
        name: data
        required: true
        type: string
      - description: default(empty) value is all
        enum:
        - year
        - quarter
        - month
        in: query
        name: duration
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                type: string
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Dezswap's Token Chart Data
      tags:
      - dashboard
  /dashboard/tokens:
    get:
      consumes:
      - application/json
      description: get Tokens data of dezswap (address, price, priceChange, volume,
        tvl)
      parameters:
      - description: sorting e.g. price_change:asc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dashboard.TokenRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Dezswap's Tokens
      tags:
      - dashboard
  /dashboard/txs:
    get:
      consumes:
      - application/json
      description: get Transactions data of dezswap (action, totalValue, asset0amount,
        asset1amount, time)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dashboard.TxRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Dezswap's Transactions
      tags:
      - dashboard
  /dashboard/txs/{poolAddress}:
    get:
      consumes:
      - application/json
      description: get Transactions data of dezswap (action, totalValue, asset0amount,
        asset1amount, time)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dashboard.TxRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Dezswap's Transactions of a pool
      tags:
      - dashboard
  /dashboard/volumes:
    get:
      consumes:
      - application/json
      description: get Volumes
      parameters:
      - description: default(empty) value is all
        enum:
        - year
        - quarter
        - month
        in: query
        name: duration
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dashboard.VolumeRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Volumes of user selected duration
      tags:
      - dashboard
  /pairs:
    get:
      consumes:
      - application/json
      description: get Pairs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.PairsRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: All Pairs
  /pairs/{address}:
    get:
      consumes:
      - application/json
      description: get Pair by Address
      parameters:
      - description: Pair Address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.PairRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Get a pair
  /pools:
    get:
      consumes:
      - application/json
      description: get Pools
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.PoolRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: All Pools
  /pools/{address}:
    get:
      consumes:
      - application/json
      description: get Pool by Address
      parameters:
      - description: Pool Address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.PoolRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Get a pool
  /stats:
    get:
      consumes:
      - application/json
      description: get pair stats
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.StatsRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: All pair stats
  /stats/{period}:
    get:
      consumes:
      - application/json
      description: get a pair stat by period
      parameters:
      - description: period 24h,7d,1mon
        enum:
        - 24h
        - 7d
        - 1mon
        in: path
        name: period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.StatRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Get a stat
  /tokens:
    get:
      consumes:
      - application/json
      description: get Tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.TokenRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: All Tokens
  /tokens/{address}:
    get:
      consumes:
      - application/json
      description: get Token by Address
      parameters:
      - description: Token Address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.TokenRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.BadRequestError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.NotFoundError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.InternalServerError'
      summary: Get a token
swagger: "2.0"
